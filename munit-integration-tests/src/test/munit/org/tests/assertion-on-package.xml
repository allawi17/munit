<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:spring="http://www.springframework.org/schema/beans"
      xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
      xmlns:mock="http://www.mulesoft.org/schema/mule/mock"
      xmlns:script="http://www.mulesoft.org/schema/mule/scripting"
      xsi:schemaLocation="
	  	http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/3.2/mule.xsd
        http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
        http://www.mulesoft.org/schema/mule/mock http://www.mulesoft.org/schema/mule/mock/current/mule-mock.xsd">


    <munit:config/>
    <mock:config name="mock"/>

    <spring:beans>
        <spring:import resource="classpath:mule-config.xml"/>
    </spring:beans>

    <munit:test name="testingEchoFlow"
                description="
        We want to test that the flow always returns the same payload as we had before calling it.">


        <munit:set payload-ref="#[string: Hello world!]"/>

        <flow-ref name="echoFlow"/>

        <munit:assert-not-null/>
        <munit:assert-that payloadIs-ref="#[string: Hello world!]"/>
    </munit:test>



</mule>